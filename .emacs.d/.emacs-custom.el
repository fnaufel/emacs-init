(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(TeX-PDF-mode t)
 '(TeX-debug-bad-boxes nil)
 '(TeX-debug-warnings t)
 '(TeX-save-query nil)
 '(TeX-show-compilation nil)
 '(after-save-hook nil)
 '(ansi-color-faces-vector
   [default bold default italic underline success warning error])
 '(bar-cursor-mode nil)
 '(bibtex-parse-keys-fast nil)
 '(browse-kill-ring-quit-action (quote kill-and-delete-window))
 '(browse-url-browser-function (quote browse-url-default-browser))
 '(browse-url-firefox-program "brave-browser")
 '(browse-url-generic-program "brave-browser")
 '(cal-html-directory "/home/fnaufel/Documents/OrgFiles/Calendars")
 '(cal-html-holidays nil)
 '(calendar-holidays
   (quote
    ((holiday-fixed 1 1 "New Year's Day")
     (holiday-easter-etc)
     (holiday-fixed 12 25 "Christmas"))))
 '(column-number-mode t)
 '(comint-input-ignoredups t)
 '(comint-input-ring-file-name "/home/fnaufel/.bash_history")
 '(comint-input-ring-size 5000)
 '(comint-terminfo-terminal "eterm-color")
 '(company-selection-wrap-around t)
 '(company-tooltip-limit 30)
 '(cua-mode nil nil (cua-base))
 '(cua-remap-control-v nil)
 '(delete-by-moving-to-trash t)
 '(delete-selection-mode t)
 '(describe-char-unidata-list
   (quote
    (name old-name general-category decomposition iso-10646-comment)))
 '(dired-listing-switches
   "--time-style=+[%Y-%m-%d-%H:%M] --group-directories-first -alDhG")
 '(eldoc-idle-delay 0)
 '(eldoc-minor-mode-string nil)
 '(enable-recursive-minibuffers nil)
 '(ess-default-style (quote RStudio))
 '(ess-history-directory ".")
 '(find-directory-functions (quote (sunrise-dired cvs-dired-noselect dired-noselect)))
 '(flycheck-global-modes nil)
 '(flymake-fringe-indicator-position (quote left-fringe))
 '(flymake-gui-warnings-enabled nil)
 '(fringe-mode nil nil (fringe))
 '(global-hl-line-mode t)
 '(global-origami-mode nil)
 '(helm-autoresize-mode t)
 '(helm-man-or-woman-function (quote woman))
 '(helm-prevent-escaping-from-minibuffer nil)
 '(hl-line-sticky-flag nil)
 '(html-mode-hook
   (quote
    ((lambda nil
       (auto-fill-mode -1)
       (setq sgml-xml-mode t)))))
 '(indent-tabs-mode nil)
 '(indicate-buffer-boundaries (quote right))
 '(indicate-empty-lines nil)
 '(inhibit-startup-screen t)
 '(initial-buffer-choice nil)
 '(initial-major-mode (quote org-mode))
 '(initial-scratch-message nil)
 '(lsp-clients-deno-server "/home/fnaufel/.deno/bin/deno")
 '(lsp-keymap-prefix "<s-kp-add>")
 '(max-lisp-eval-depth 1000)
 '(max-specpdl-size 3000)
 '(mc/mode-line (quote (" mc:" (:eval (format "%d" (mc/num-cursors))))))
 '(menu-bar-mode nil)
 '(minibuffer-auto-raise nil)
 '(org-M-RET-may-split-line (quote ((default . t))))
 '(org-adapt-indentation t)
 '(org-agenda-custom-commands
   (quote
    (("i" "Initial"
      ((agenda "" nil)
       (alltodo ""
                ((org-agenda-sorting-strategy
                  (quote
                   (priority-down todo-state-up))))))
      nil))))
 '(org-agenda-files "~/.agenda_files")
 '(org-agenda-include-diary t)
 '(org-agenda-loop-over-headlines-in-active-region nil)
 '(org-agenda-sorting-strategy
   (quote
    ((agenda habit-down time-up priority-down category-keep)
     (todo time-up priority-down todo-state-up)
     (tags priority-down category-keep)
     (search category-keep))))
 '(org-agenda-span (quote week))
 '(org-agenda-start-on-weekday 0)
 '(org-agenda-start-with-follow-mode nil)
 '(org-agenda-text-search-extra-files nil)
 '(org-agenda-todo-list-sublevels nil)
 '(org-agenda-window-setup (quote current-window))
 '(org-babel-load-languages (quote ((emacs-lisp . t) (shell . t) (latex . t))))
 '(org-blank-before-new-entry (quote ((heading . t) (plain-list-item . t))))
 '(org-catch-invisible-edits nil)
 '(org-clock-clocktable-default-properties
   (quote
    (:maxlevel 3 :scope agenda :block thisweek :step day :fileskip0 t :link t :narrow 70! :hidefiles nil :formula % :stepskip0 t :tcolumns 1)))
 '(org-clock-mode-line-total (quote today))
 '(org-complete-tags-always-offer-all-agenda-tags t)
 '(org-confirm-elisp-link-function (quote y-or-n-p))
 '(org-confirm-shell-link-function (quote y-or-n-p))
 '(org-cycle-global-at-bob t)
 '(org-cycle-level-faces nil)
 '(org-cycle-separator-lines 1)
 '(org-deadline-warning-days 7)
 '(org-default-priority 40)
 '(org-duration-format (quote ((special . h:mm))))
 '(org-ellipsis " ðŸ¡‡")
 '(org-export-latex-packages-alist (quote (("" "minted" t))))
 '(org-file-apps
   (quote
    ((auto-mode . emacs)
     ("\\.mm\\'" . default)
     ("\\.x?html?\\'" . default)
     ("\\(?:xhtml\\|html\\)\\'" . default)
     ("\\.pdf::\\([[:digit:]]+\\)\\'" . "okular -p %1 %s")
     ("\\.pdf\\'" . "okular %s")
     ("\\.\\(?:flac\\|mp3\\|m4a\\)\\(?:::\\([[:digit:]]+\\)\\)?\\'" funcall audio-link-function file
      (match-string 1 link))
     ("\\.\\(?:avi\\|flv\\|wmv\\|mp4\\|ra\\)\\(?:::\\([[:digit:]]+\\)\\(?:-\\([[:digit:]]+\\)\\)?\\)?\\'" funcall video-link-function file
      (match-string 1 link)
      (match-string 2 link))
     ("\\(?:mobi\\|epub\\|azw\\)" . "ebook-viewer %s")
     ("\\.Rproj\\'" . "rstudio %s")
     ("\\.png\\'" . "gwenview %s")
     ("\\.jpe?g\\'" . "gwenview %s")
     ("\\.gif\\'" . "gwenview %s"))))
 '(org-footnote-auto-label (quote confirm))
 '(org-footnote-section nil)
 '(org-format-latex-options
   (quote
    (:foreground default :background default :scale 1.5 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers
                 ("begin" "$1" "$" "$$" "\\(" "\\["))))
 '(org-hide-block-startup nil)
 '(org-hide-emphasis-markers nil)
 '(org-hide-leading-stars t)
 '(org-html-htmlize-output-type (quote css))
 '(org-id-link-to-org-use-id (quote create-if-interactive-and-no-custom-id))
 '(org-indent-mode-turns-off-org-adapt-indentation nil)
 '(org-journal-date-format "[%Y-%m-%d %A]")
 '(org-journal-date-prefix "* ")
 '(org-journal-dir "/home/fnaufel/Documents/OrgFiles/Journal")
 '(org-journal-find-file (quote find-file))
 '(org-journal-hide-entries-p nil)
 '(org-journal-start-on-weekday 0)
 '(org-journal-time-format "%R ")
 '(org-journal-time-prefix "
*** ")
 '(org-link-elisp-confirm-function (quote y-or-n-p))
 '(org-link-search-must-match-exact-headline nil)
 '(org-link-shell-confirm-function (quote y-or-n-p))
 '(org-log-done (quote time))
 '(org-log-into-drawer t)
 '(org-lowest-priority 60)
 '(org-modules
   (quote
    (ol-bbdb ol-bibtex ol-docview ol-doi ol-eww ol-gnus ol-info org-inlinetask ol-irc ol-mhe ol-rmail ol-w3m org-collector)))
 '(org-num-face (quote success))
 '(org-num-max-level 2)
 '(org-odd-levels-only t)
 '(org-pretty-entities nil)
 '(org-priority-default 40)
 '(org-priority-highest 1)
 '(org-priority-lowest 60)
 '(org-refile-targets (quote ((org-agenda-files :maxlevel . 10))))
 '(org-refile-use-outline-path (quote file))
 '(org-return-follows-link t)
 '(org-reveal-history t)
 '(org-reveal-hlevel 2)
 '(org-reveal-mathjax t)
 '(org-reveal-mathjax-url
   "file:///home/fnaufel/.ipython/nbextensions/mathjax/MathJax.js?config=TeX-AMS-MML_HTMLorMML")
 '(org-reveal-plugins (quote (classList markdown highlight zoom notes search)))
 '(org-reveal-root "/home/fnaufel/bin/reveal")
 '(org-reveal-theme "simple")
 '(org-reveal-transition "none")
 '(org-reverse-note-order t)
 '(org-special-ctrl-a/e t)
 '(org-src-window-setup (quote reorganize-frame))
 '(org-startup-folded t)
 '(org-structure-template-alist
   (quote
    (("a" . "export ascii")
     ("c" . "center")
     ("C" . "comment")
     ("el" . "src emacs-lisp")
     ("e" . "example")
     ("E" . "export")
     ("h" . "export html")
     ("l" . "export latex")
     ("q" . "quote")
     ("s" . "src")
     ("v" . "verse")
     ("b" . "src bibtex"))))
 '(org-superstar-cycle-headline-bullets nil)
 '(org-superstar-headline-bullets-list (quote ("âœ±")))
 '(org-superstar-prettify-item-bullets nil)
 '(org-superstar-special-todo-items t)
 '(org-superstar-todo-bullet-alist
   (quote
    (("TODO" . 9744)
     ("NEXT" . 9744)
     ("STARTED" . 9744)
     ("DONE" . 9745)
     ("CANCELED" . 128473)
     ("default" . 9673))))
 '(org-table-convert-region-max-lines 99999)
 '(org-todo-keywords
   (quote
    ((sequence "TODO(t!)" "NEXT(n!)" "STARTED(s!)" "|" "CANCELED(c!)" "DONE(d!)"))))
 '(org-use-speed-commands t)
 '(origami-parser-alist
   (quote
    ((java-mode . origami-java-parser)
     (c-mode . origami-c-parser)
     (c++-mode . origami-c-style-parser)
     (perl-mode . origami-c-style-parser)
     (cperl-mode . origami-c-style-parser)
     (js-mode . origami-c-style-parser)
     (js2-mode . origami-c-style-parser)
     (js3-mode . origami-c-style-parser)
     (go-mode . origami-c-style-parser)
     (php-mode . origami-c-style-parser)
     (python-mode . origami-python-parser)
     (emacs-lisp-mode . origami-elisp-parser)
     (lisp-interaction-mode . origami-elisp-parser)
     (clojure-mode . origami-clj-parser)
     (triple-braces .
                    #[257 "\303\304\305\306\307\300\301\302$\310\"\311\312%\207"
                          ["{{{" "}}}" "\\(?:\\(?:{{{\\|}}}\\)\\)" make-byte-code 257 "\304\302\"\305\303\300\301$\207" vconcat vector
                           [origami-get-positions origami-build-pair-tree]
                           7 "

(fn CONTENT)"]
                          10 "

(fn CREATE)"]))))
 '(origami-show-fold-header nil)
 '(package-enable-at-startup nil)
 '(package-selected-packages
   (quote
    (zotxt org-noter org-noter-pdftools lsp-origami origami json-mode flycheck-pyflakes org-clock-csv visual-fill-column adaptive-wrap org-ref org-journal org-superstar helm-bibtex poly-R polymode all-the-icons all-the-icons-dired all-the-icons-gnus treemacs-all-the-icons major-mode-hydra pretty-hydra paradox buffer-move lsp-pyright rainbow-delimiters helm-projectile projectile company-box setup use-package helm-lsp lsp-treemacs lsp-ui which-key lsp-mode ac-js2 skewer-mode company-web web-mode web-mode-edit-element git-timemachine bash-completion cdlatex yaml-mode all elm-mode elm-yasnippets auctex auto-complete-auctex calfw calfw-org helm-org system-packages org-ac xonsh-mode js2-mode anzu helpful info-colors js-comint nodejs-repl typo web-beautify markdown-toc markdown-preview-mode markdown-mode magit lua-mode htmlize dash-functional multiple-cursors expand-region)))
 '(paradox-execute-asynchronously t)
 '(paradox-github-token t)
 '(pdf-tools-enabled-modes
   (quote
    (pdf-history-minor-mode pdf-isearch-minor-mode pdf-links-minor-mode pdf-misc-minor-mode pdf-outline-minor-mode pdf-misc-size-indication-minor-mode pdf-annot-minor-mode pdf-sync-minor-mode pdf-misc-context-menu-minor-mode pdf-cache-prefetch-minor-mode pdf-occur-global-minor-mode)))
 '(python-indent-offset 2)
 '(python-shell-interpreter "python3")
 '(rcirc-authinfo (quote (("freenode" nickserv "SagAllesAb" "54g4ll354b"))))
 '(rcirc-default-full-name "Sag alles ab!")
 '(rcirc-default-nick "sag_alles_ab" t)
 '(rcirc-default-user-name "SagAllesAb")
 '(rcirc-multiline-major-mode (quote org-mode))
 '(recentf-max-menu-items 100)
 '(recentf-max-saved-items 100)
 '(recentf-mode t)
 '(safe-local-variable-values
   (quote
    ((eval add-hook
           (quote after-save-hook)
           (lambda nil
             (my/tangle-async))
           nil t)
     (require-final-newline)
     (org-confirm-babel-evaluate))))
 '(scroll-bar-mode nil)
 '(scroll-conservatively 50)
 '(scroll-preserve-screen-position 1)
 '(select-active-regions nil)
 '(select-enable-clipboard t)
 '(sentence-end-double-space nil)
 '(sgml-xml-mode t)
 '(shell-file-name "/bin/bash")
 '(show-paren-mode t)
 '(size-indication-mode t)
 '(smartparens-global-mode t)
 '(sml-modeline-borders nil)
 '(sml-modeline-mode t)
 '(sp-navigate-interactive-always-progress-point t)
 '(split-height-threshold 80)
 '(sunrise-confirm-kill-viewer nil)
 '(sunrise-cursor-follows-mouse nil)
 '(sunrise-init-hook (quote (sunrise-mouse-disown-cursor)))
 '(sunrise-listing-switches
   "--time-style=+[%Y-%m-%d-%H:%M] --group-directories-first -alDhG")
 '(sunrise-mode-hook (quote (sunrise-mark-sync)))
 '(sunrise-modeline-use-utf8-marks t)
 '(sunrise-popviewer-enabled t)
 '(sunrise-popviewer-mode t)
 '(sunrise-popviewer-style (quote multiple-frames))
 '(sunrise-quit-hook (quote (sunrise-quit-function)))
 '(sunrise-terminal-program "bash")
 '(sunrise-traditional-other-window t)
 '(sunrise-tree-isearch-always-sticky t)
 '(sunrise-use-commander-keys nil)
 '(sunrise-visit-buffer-function (quote display-buffer-other-frame))
 '(sunrise-window-split-style (quote horizontal))
 '(sunrise-windows-default-ratio 75)
 '(sunrise-windows-locked nil)
 '(tab-width 4)
 '(term-mode-hook (quote ((lambda nil (yas-minor-mode -1)))))
 '(tool-bar-mode nil)
 '(user-full-name "")
 '(vc-follow-symlinks t)
 '(visual-fill-column-enable-sensible-window-split nil)
 '(woman-use-own-frame nil)
 '(xterm-color-use-bold-for-bright t))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(anzu-mode-line ((t (:foreground "blue" :weight bold))))
 '(calendar-today ((t (:inverse-video t :underline nil))))
 '(cfw:face-toolbar ((t (:background "black" :foreground "black"))))
 '(cfw:face-toolbar-button-off ((t (:foreground "dim gray" :weight bold))))
 '(cfw:face-toolbar-button-on ((t (:foreground "light gray" :weight bold))))
 '(highlight-indent-face ((t (:background "dark gray"))))
 '(org-block ((t (:background "gray15"))))
 '(org-block-begin-line ((t (:inherit org-meta-line :background "#103030"))))
 '(org-ellipsis ((t (:foreground "LightGoldenrod" :underline nil))))
 '(org-journal-calendar-entry-face ((t (:foreground "#bbbb00" :slant italic))))
 '(org-journal-calendar-scheduled-face ((t (:foreground "#ff0000" :slant italic))))
 '(org-ref-cite-face ((t (:inherit org-link :foreground "pale green"))))
 '(paradox-mode-line-face ((t (:inherit (font-lock-keyword-face mode-line-buffer-id) :foreground "medium blue" :weight normal))))
 '(rainbow-delimiters-base-error-face ((t (:inherit rainbow-delimiters-base-face :foreground "red"))))
 '(rainbow-delimiters-base-face ((t (:inherit default))))
 '(rainbow-delimiters-depth-1-face ((t (:inherit rainbow-delimiters-base-face :foreground "gray90"))))
 '(rainbow-delimiters-depth-2-face ((t (:inherit rainbow-delimiters-base-face :foreground "deep sky blue"))))
 '(rainbow-delimiters-depth-3-face ((t (:inherit rainbow-delimiters-base-face :foreground "lawn green"))))
 '(rainbow-delimiters-depth-4-face ((t (:inherit rainbow-delimiters-base-face :foreground "yellow2"))))
 '(rainbow-delimiters-depth-5-face ((t (:inherit rainbow-delimiters-base-face :foreground "violet"))))
 '(rainbow-delimiters-depth-6-face ((t (:inherit rainbow-delimiters-base-face :foreground "CadetBlue3"))))
 '(rainbow-delimiters-depth-8-face ((t (:inherit rainbow-delimiters-base-face :foreground "cyan"))))
 '(rainbow-delimiters-depth-9-face ((t (:inherit rainbow-delimiters-base-face :foreground "light salmon"))))
 '(sunrise-active-path-face ((t (:background "dark blue" :foreground "yellow" :weight bold :height 120))))
 '(sunrise-html-face ((t (:foreground "green yellow"))))
 '(sunrise-log-face ((t (:foreground "goldenrod"))))
 '(sunrise-packaged-face ((t (:foreground "magenta"))))
 '(sunrise-passive-path-face ((t (:background "dark gray" :foreground "black" :weight bold :height 120))))
 '(sunrise-xml-face ((t (:foreground "medium spring green"))))
 '(term ((t (:inherit default)))))
